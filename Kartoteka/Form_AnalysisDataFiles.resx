<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>